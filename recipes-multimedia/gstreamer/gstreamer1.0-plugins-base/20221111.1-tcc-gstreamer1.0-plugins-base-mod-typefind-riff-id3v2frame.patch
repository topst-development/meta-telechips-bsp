[mod] gstreamer1.0-plugins-base (typefind, riff-media, id3v2frame)

typefind - support TopDonw image
riff-media - mono channel adpcm files generate Pop-noise or skipped play, use channel information for adpcm
           - case of 'motion-jpeg' and 'still image-jpeg', use JPU
           - add hevc fourcc
id3v2frame - check current frame data size, too (TCS : IS004A-13200(MP3))

diff -Naur before/gst/typefind/gsttypefindfunctions.c 1.20.3-r0/gst-plugins-base-1.20.3/gst/typefind/gsttypefindfunctions.c
--- before/gst/typefind/gsttypefindfunctions.c	2022-06-16 07:36:22.000000000 +0900
+++ 1.20.3-r0/gst-plugins-base-1.20.3/gst/typefind/gsttypefindfunctions.c	2022-11-07 16:49:22.472372306 +0900
 /*** image/x-quicktime ***/
@@ -4239,6 +4239,8 @@
     return;
   }
 
+  if (h > 0xffff)	h = (~h) + 1;      //support TopDown image
+
   /* image sizes sanity check */
   GST_LOG ("w=%u, h=%u, planes=%u, bpp=%u", w, h, planes, bpp);
   if (w == 0 || w > 0xfffff || h == 0 || h > 0xfffff || planes != 1 ||
diff -Naur before/gst-libs/gst/riff/riff-media.c 1.20.3-r0/gst-plugins-base-1.20.3/gst-libs/gst/riff/riff-media.c
--- before/gst-libs/gst/riff/riff-media.c	2022-11-07 16:07:14.591338949 +0900
+++ 1.20.3-r0/gst-plugins-base-1.20.3/gst-libs/gst/riff/riff-media.c	2022-11-07 16:21:14.567465462 +0900
@@ -172,7 +172,7 @@
     case GST_RIFF_dmb1:
     case GST_MAKE_FOURCC ('A', 'C', 'D', 'V'):
     case GST_MAKE_FOURCC ('Q', 'I', 'V', 'G'):
-      caps = gst_caps_new_empty_simple ("image/jpeg");
+      caps = gst_caps_new_empty_simple ("video/x-jpeg");
       if (codec_name)
         *codec_name = g_strdup ("Motion JPEG");
       break;
@@ -180,7 +180,7 @@
     case GST_RIFF_JPEG:        /* generic (mostly RGB) MJPEG */
     case GST_RIFF_jpeg:
     case GST_MAKE_FOURCC ('j', 'p', 'e', 'g'): /* generic (mostly RGB) MJPEG */
-      caps = gst_caps_new_empty_simple ("image/jpeg");
+      caps = gst_caps_new_empty_simple ("video/x-jpeg");
       if (codec_name)
         *codec_name = g_strdup ("JPEG Still Image");
       break;
@@ -357,6 +357,10 @@
     case GST_MAKE_FOURCC ('x', '2', '6', '5'):
     case GST_MAKE_FOURCC ('H', '2', '6', '5'):
     case GST_MAKE_FOURCC ('h', '2', '6', '5'):
+    case GST_MAKE_FOURCC ('h', 'e', 'v', 'c'):
+    case GST_MAKE_FOURCC ('H', 'E', 'V', 'C'):
+    case GST_MAKE_FOURCC ('h', 'e', 'v', '1'):
+    case GST_MAKE_FOURCC ('H', 'E', 'V', '1'):
     case GST_MAKE_FOURCC ('h', 'v', 'c', '1'):
     case GST_MAKE_FOURCC ('H', 'V', 'C', '1'):
       caps = gst_caps_new_empty_simple ("video/x-h265");
@@ -1298,7 +1302,7 @@
          * would probably confuse timing */
         strf->av_bps = 0;
         if (strf->channels != 0 && strf->rate != 0 && strf->blockalign != 0) {
-          int spb = ((strf->blockalign - strf->channels * 7) / 2) * 2;
+          int spb = ((strf->blockalign - strf->channels * 7) / strf->channels) * 2;
           strf->av_bps =
               gst_util_uint64_scale_int (strf->rate, strf->blockalign, spb);
           GST_DEBUG ("fixing av_bps to calculated value %d of MS ADPCM",
@@ -1420,7 +1424,7 @@
          * as this would probably confuse timing */
         strf->av_bps = 0;
         if (strf->channels != 0 && strf->rate != 0 && strf->blockalign != 0) {
-          int spb = ((strf->blockalign - strf->channels * 4) / 2) * 2;
+          int spb = ((strf->blockalign - strf->channels * 4) / strf->channels) * 2;
           strf->av_bps =
               gst_util_uint64_scale_int (strf->rate, strf->blockalign, spb);
           GST_DEBUG ("fixing av_bps to calculated value %d of IMA DVI ADPCM",
diff -Naur before/gst-libs/gst/tag/id3v2frames.c 1.20.3-r0/gst-plugins-base-1.20.3/gst-libs/gst/tag/id3v2frames.c
--- before/gst-libs/gst/tag/id3v2frames.c	2022-06-16 07:36:22.000000000 +0900
+++ 1.20.3-r0/gst-plugins-base-1.20.3/gst-libs/gst/tag/id3v2frames.c	2022-11-07 16:15:41.263505675 +0900
@@ -109,7 +109,7 @@
 
   if (work->frame_flags & (ID3V2_FRAME_FORMAT_COMPRESSION |
           ID3V2_FRAME_FORMAT_DATA_LENGTH_INDICATOR)) {
-    if (frame_data_size <= 4)
+    if ((work->hdr.frame_data_size <= 4) || (frame_data_size <= 4))
       return FALSE;
     if (ID3V2_VER_MAJOR (work->hdr.version) == 3) {
       work->parse_size = GST_READ_UINT32_BE (frame_data);
@@ -592,8 +592,10 @@
     mime_str = g_strndup ((gchar *) work->parse_data, 3);
     len = 3;
   } else {
-    if (!parse_id_string (work, &mime_str, &len, &datalen))
-      return FALSE;
+    if (!parse_id_string (work, &mime_str, &len, &datalen)) {
+      len--;
+      //return FALSE;
+    }
     ++len;                      /* for string terminator */
   }
 
